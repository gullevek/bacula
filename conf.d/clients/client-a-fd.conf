#####################################################################################
#### UDON [monitoring/apps/git]
#####################################################################################

Client {
	Name = <client-a-fd>
	Address = <client-a-fd.hostname.com>
	FDPort = 9102
	Catalog = MyCatalog
	Password = "<CLIENT-A-FD-PASSWORD>"          # password for FileDaemon
	File Retention = 60 days            # 60 days
	Job Retention = 6 months            # six months
	AutoPrune = yes                     # Prune expired Jobs/Files
Heartbeat Interval = 1 Minute
}

Job {
	Name = "<Client A>"
	JobDefs = "StandardLinuxJob"
	Client = <client-a-fd>
	FileSet = "<Client A Set>"
}

FileSet {
	Name = "<Client A Set>"
	Include {
		Options {
			signature = SHA1
			compression = GZIP
			# verify = pins1 # inodes, permissions, number of links, size, sha1
			noatime = yes
			checkfilechanges = yes
			aclsupport = yes
			xattrsupport = yes
			Accurate = yes
		}
		File = /etc
		File = /boot
		File = /root
	}

	Exclude {
		File = /var/lib/bacula
		File = /proc
		File = /.journal
		File = /.autofsck
		File = /.fsck
		File = /tmp
		File = /var/tmp
		# no log files
		File = /var/log
	}
}

#### DATABASE JOBS
## PostgreSQL
# full backup for the data folder
# 9.4:
Job {
	Name = "<client-a-postgresqlFull94-fd>"
	JobDefs = "StandardDatabaseJob"
	Client = <client-a-fd>
	FileSet = "<Cleint-A-Postgresql94Full-set>"
	Level = Full
	ClientRunBeforeJob = "/etc/bacula/scripts/pre-base-backup.sh 9.4" 
	ClientRunAfterJob = "/etc/bacula/scripts/post-base-backup.sh 9.4"
	Schedule = "DatabaseFullCycle"
}
# Incremental (wal files only)
Job {
	Name = "<cleint-a-postgresqlLogs94-fd>"
	JobDefs = "StandardDatabaseJob"
	Client = <client-a-fd>
	FileSet = "<Client-A-Postgresql94Logs-set>"
	Level = Incremental
	Accurate = no   # I want to see/restore all the files from all previous incremental backups
	ClientRunBeforeJob = "/etc/bacula/scripts/pre-logs-backup.sh 9.4" 
	ClientRunAfterJob = "/etc/bacula/scripts/post-logs-backup.sh 9.4"
	Schedule = "DatabaseLogsCycle"
}
